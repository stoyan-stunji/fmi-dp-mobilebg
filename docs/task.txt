Какво е mobile:

Обява (save and edit)
Колекция от обяви
Спонсорирана обява
Отзиви
История на цените

Филтър
Търсене

Купувач
Продавач
Guest
Дилъри

Превозни средства
Части
Услуги

Чат (между купувач и продавач)


За следващия път трябва да надградите домашното като помислите (и имплементирате) кои са правилните и необходими абстракции от гледна точка на преизползваемост, кохезия и свързаност(coupling). Ако е необходимо пишете необходимия код за да работи цялата функционалност, за да може да и направите дизайн, като се възползвате от всичко в интернет, чатботове и тн

// сложете си ги в три отделни файла
// не можете да ги пипате!
public class SmsNotifier {
    public void sendSms(String phoneNumber, String message) {
        System.out.println("Sending SMS to " + phoneNumber + " with message: " + message);
    }
}
 
public class EmailNotifier {
    public void sendEmail(String email, String title, String message) {
        System.out.println("Sending email to " + email + " with title: " + title + " and message: " + message);
    }
}
 
public class PigeonNotifier {
    public void sendPigeon(String address, Integer pigeonNumber, String message) {
        System.out.println("Sending pigeon to " + address + " with message: " + message);
    }
}

Задачата от вчера е да надградите вашата имплементация на мобиле БГ по следния начин:
очакваме от предните пъти да имате
някакви продукти
някакви обяви
начин за създаване на обяви
начин за филтриране на обяви
Задачата е:
добавяте в проекта 3те класа дето съм качил горе в pastebin. Тях НЕ можете да ги променяте по какъвто и да е начин - можете да си представите, че те са част от външна библиотека.
аз като потребител искам да кажа "ако се появи обява отговаряща на някакви условия (напр. ауди, дизел, 2005-2015), искам да получа <имейл / смс / гълъб>"
когато се създаде такава обява, трябва да изпратите правилната нотификация.
както винаги - кода в гътхъб, и се пишете в горния ексел как ви е репото 


днес също "решавахме" домашното от предния път. горе съм качил кода - можете да видите новите неща които сме добавили. Можете да ползвате своите имплементации

Проблема в момента е:
NotificationRule има масив от правила, и NotificationService проверява дали ВСИЧКИ мачват, преди да прати нотификация.
Клиентите ни искат да дефинират по-сложни филтри - например "искам (БМВ, бензин, след 2010) ИЛИ (АУДИ, дизел, преди 2020)". Тоест трябва да имаме начин да правим произволни "И" и "ИЛИ" операции.

Сега задачата до 19ти е:
NotificationRule да няма списък от филтри, а само един филтър
да се направят по-сложни филтри, които да ползват по-ниски филтри:
И филтър
ИЛИ филтър
филтър "N от M", приема int N, int M и списък от M филтъра. Филтъра проверява дали ПОНЕ N от M-те филтъра са успешни. Например "Искам поне 2 от 3 - [дизел, Ауди, след 2003]"

а да - предното домашно с нотификациите видяхме, че се решава използвайки
Adapter pattern - за да адаптираме интерфейсите на SmsNotifier, EmailNotifier, PigeonNotifier към общ интерфейс, с цел да се по-удобни
Observer pattern - ползва се за всякакви subscription/notification/publising/etc ситуации.
Също, днес по време на часа искахме да направим история на Listing-ите. Например ако човек иска да:
направи обява
после да промени цената
после да промени снимките
иска да върне Listing-а в началната си версия
Направихме го чрез Memento pattern-a. Ще кача код по-късно :Д